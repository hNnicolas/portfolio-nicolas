---

---

<section class="hero relative z-40 flex h-screen flex-col justify-between overflow-hidden bg-firefly-900 lg:flex-row lg:flex-nowrap">
	<div class="relative flex h-[15%] w-full flex-col justify-end lg:h-full lg:w-[10%] lg:flex-row">
		<p class="text-decoratif self-center font-primary text-8xl uppercase text-fantasy-50 opacity-35 lg:rotate-180">portfolio</p>
		<div class="hero-border w-full border-b-2 border-fantasy-50 opacity-65 lg:h-full lg:w-0 lg:border-b-0 lg:border-r-2"></div>
	</div>
	<div class="relative flex h-[70%] w-full items-center justify-center lg:h-full lg:w-[90%]">
		<div class="hero-text">
			<div class="split-text pointer-events-none flex flex-col items-center text-fantasy-50 opacity-40">
				<p class="flex flex-row flex-nowrap">
					<span class="char">N</span>
					<span class="char">i</span>
					<span class="char">c</span>
					<span class="char">o</span>
					<span class="char">l</span>
					<span class="char">a</span>
					<span class="char">s</span>
				</p>
				<p>
					<span class="char">H</span>
					<span class="char">u</span>
					<span class="char">a</span>
					<span class="char">n</span>
					<span class="char">g</span>
				</p>
			</div>
			<div class="mt-6 overflow-hidden text-center">
				<h1
					class="subtitle inline-block translate-y-0 font-primary text-2xl lowercase text-fantasy-50 md:text-4xl lg:pb-4 xl:text-5xl 2xl:text-6xl"
				>
					Développeur full stack <span class="font-content text-xl md:text-2xl lg:text-3xl xl:text-4xl">
				</h1>
			</div>
			<!-- 			<p class="hidden lg:mt-1 lg:block lg:self-end lg:text-center">SCROLL DOWN</p>
 -->
		</div>
	</div>
	<div class="relative flex h-[15%] w-full flex-col items-end justify-start lg:h-full lg:w-[10%] lg:items-start lg:justify-end">
		<div class="hero-border w-full border-t-2 border-fantasy-50 opacity-65 lg:h-full lg:w-0 lg:border-l-2 lg:border-t-0"></div>
		<!-- 		<p class="mt-1 self-center lg:hidden">SCROLL DOWN</p>
 -->
	</div>
</section>

<style is:global lang="postcss">
.hero .split-text .char {
	@apply inline-block font-primary opacity-75;
	transform-origin: 50% 50%;
    font-size: 25vw;
	line-height: 0.8;
}

.hero .text-decoratif {
	font-size: 19vw;
	line-height: 0.70;
}

/* DESKTOP */
@media screen and (min-width: 1024px) {
	.hero .text-decoratif {
		writing-mode: vertical-rl;
		text-orientation: mixed;
		font-size: 10vw;
	}

    .hero .split-text .char {
        font-size: 15vw;
        line-height: 1;
    }
}
</style>
<script>
	import gsap from "gsap";
	import { ScrollTrigger } from "gsap/src/ScrollTrigger";
	gsap.registerPlugin(ScrollTrigger);
	const body = document.querySelector<HTMLElement>("body");

	// Lancer l'animation que lors de l'ouverture de la session
	if (!sessionStorage.getItem("heroPlayed")) {
		body.classList.add("first-visit");
		const splitText = document.querySelectorAll<HTMLElement>(".split-text .char");

		/* FONCTION DE PLACEMENT ALÉATOIRE DES LETTRES */
		function positionCharsRandomly() {
			// const isMobileVersion = window.innerWidth <= 1023;

			splitText.forEach((char) => {
				// Générer des positions / rotations aléatoires
				const randomY = Math.random() * 600 - 300; // entre -300px et 300px
				const randomZ = Math.random() * 50 - 50 / 2; // Décalage en profondeur
				const randomRotationY = Math.random() * 1000 - 500; // entre -500° et 500°

				// Appliquer les transformations initiales via GSAP
				gsap.set(char, {
					y: randomY,
					z: randomZ,
					rotationY: randomRotationY
				});
			});

			body.style.overflow = "hidden";
		}
		// Appeler la fonction après le chargement de la page
		window.addEventListener("load", positionCharsRandomly);

		// MOBILE ANIMATION
		let mmMobile = gsap.matchMedia();
		mmMobile.add("(max-width: 1023px)", () => {
			let tl = gsap.timeline({});
			tl.to(".first-visit", { overflow: "hidden" });
			tl.from(".hero .hero-border", { width: "0", duration: 1, delay: 3.2 });
			tl.from(splitText, { fontSize: "30vw", duration: 2 }, "<");
			tl.to(
				splitText,
				{
					y: 0,
					z: 0,
					rotationY: 0,
					duration: 2,
					stagger: {
						from: "random",
						ease: "power2.in"
					}
				},
				"<"
			);
			tl.from(".hero .hero-text h1", { translateY: "100%", duration: 0.8 });
			tl.from(".hero .split-text", { opacity: 1, duration: 1 }, "<");
			tl.from(".hero .text-decoratif", { opacity: 0, duration: 0.5 });
			tl.to(".first-visit", { overflow: "visible" });
		});

		// DESKTOP ANIMATION
		let mmDesktop = gsap.matchMedia();
		mmDesktop.add("(min-width: 1024px)", () => {
			let tl = gsap.timeline({});
			tl.to(".first-visit", { overflow: "hidden" });
			tl.from(".hero .hero-border", { height: "0", duration: 1, delay: 3.5 });
			tl.from(splitText, { fontSize: "20vw", duration: 2 }, "<");
			tl.to(
				splitText,
				{
					y: 0,
					z: 0,
					rotationY: 0,
					duration: 2,
					stagger: {
						from: "random",
						ease: "power2.in"
					}
				},
				"<"
			);
			tl.from(".hero .hero-text h1", { translateY: "100%", duration: 0.8 });
			tl.from(".hero .split-text", { opacity: 1, duration: 1 }, "<");
			tl.from(".hero .text-decoratif", { opacity: 0, duration: 0.5 });
			tl.to(".first-visit", { overflow: "visible" });
		});

		setTimeout(() => {
			sessionStorage.setItem("heroPlayed", "true");
		}, 3000);
	}
</script>
