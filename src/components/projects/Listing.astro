---
const { data } = Astro.props;
import Button from "../common/Button.astro";
---

<section class="projects-listing flex flex-col items-center space-y-14 py-14 lg:space-y-24 xl:space-y-40 xl:py-24">
	{
		data.map((projet) => (
			<div class="project group text-firefly-900">
				<div class="px-3 lg:px-12 xl:flex xl:h-full xl:flex-row-reverse xl:items-center xl:justify-between xl:gap-16 xl:px-12 xl:group-even:flex-row 2xl:gap-32 ">
					{/* IMAGE MOBILE */}
					<img
						class="img-mobile mx-auto h-[65vh] w-auto rounded-2xl object-contain blur-sm lg:hidden"
						src={projet.imageMobile.src}
						alt={projet.imageMobile.alt}
					/>
					{/* IMAGE DESKTOP */}
					<img
						class="img-desktop hidden lg:mx-auto lg:block lg:h-full lg:w-4/5 lg:rounded-xl lg:object-contain lg:blur-sm xl:mx-0 xl:rounded-xl xl:group-odd:w-7/12 xl:group-even:w-6/12"
						src={projet.image.src}
						alt={projet.image.alt}
					/>
					<div class="flex w-full flex-col space-y-8 text-firefly-900 xl:h-1/2 xl:justify-center xl:group-odd:w-5/12 xl:group-odd:items-end xl:group-even:w-6/12 xl:group-even:pr-12">
						<div class="mx-auto w-fit overflow-hidden xl:mx-0">
							<h2 class="mt-6 translate-y-full font-primary text-5xl text-firefly-900 group-odd:text-end xl:mt-0 xl:text-6xl 2xl:text-7xl">
								{projet.name}
							</h2>
						</div>
						{/* MISE EN PAGE PROJET ENTREPRISE */}
						{projet.type === "Perso" && (
							<div class="content flex w-full flex-col text-center opacity-0 xl:group-odd:text-end xl:group-even:text-start">
								<p class=" text-firefly-900 xl:text-2xl">{projet.description}</p>
								<p class="mt-2">
									Un projet réalisé par
									<a class="underline" target="_blank" href="https://github.com/hNnicolas">
										Nicolas
									</a>
								</p>
								<Button
									isExternalLink={true}
									text={`Visiter le site ${projet.name}`}
									url={projet.link}
									additionalClass="mt-6 self-center xl:self-end"
								/>
							</div>
						)}
						{/* MISE EN PAGE PROJET ECOLE */}
						{projet.type === "Ecole" && (
							<div class="content flex w-full flex-col text-center opacity-0 xl:group-odd:text-end xl:group-even:text-start">
								<p class="uppercase">Objectif</p>
								<p class="text-firefly-900 xl:text-2xl">{projet.description}</p>
								<p class="mt-6 uppercase">Technologies</p>
								<p class="text-firefly-900 xl:text-2xl">{projet.technologies}</p>
								<p class="mt-2">Projet réalisé dans le cadre de ma formation</p>
								{projet.linkIsRepo ? (
									<Button
										isExternalLink={true}
										text={`Voir le code du projet ${projet.name}`}
										url={projet.link}
										additionalClass="mt-6 self-center xl:self-end"
									/>
								) : (
									<Button
										isExternalLink={true}
										text={`Visiter le site ${projet.name}`}
										url={projet.link}
										additionalClass="mt-6 self-center xl:self-end"
									/>
								)}
							</div>
						)}
					</div>
				</div>

				<div class="mt-14 flex h-[1px] w-full items-center justify-center overflow-visible bg-firefly-900 lg:hidden">
					<div class="h-3 w-3 rounded-full bg-firefly-900" />
				</div>
			</div>
		))
	}
</section>
<style lang="postcss">
	@media screen and (max-width: 1279px) {
		.project img {
			box-shadow: -5px 5px 10px 1px rgba(37,58,60,0.2);
		}
	}

	@media screen and (min-width: 1280px) {
	.project:nth-of-type(odd) img {
		box-shadow: -5px 5px 10px 1px rgba(37,58,60,0.2);
	}

	.project:nth-of-type(even) img {
		box-shadow: 5px 5px 10px 1px rgba(37,58,60,0.2);
	}
	}

</style>
<script>
	import gsap from "gsap";
	import { ScrollTrigger } from "gsap/src/ScrollTrigger";
	gsap.registerPlugin(ScrollTrigger);

	const projects = document.querySelectorAll<HTMLElement>(".project");
	// MOBILE ANIMATION
	let mmMobile = gsap.matchMedia();
	mmMobile.add("(max-width: 1023px)", () => {
		projects.forEach((project) => {
			let tl = gsap.timeline({
				scrollTrigger: {
					trigger: project,
					start: "top 30%"
				}
			});
			let title = project.querySelector("h2");
			let image = project.querySelector(".img-mobile");
			let content = project.querySelector(".content");
			tl.to(image, { filter: "blur(0px)", duration: 1 });
			tl.to(title, { translateY: 0, duration: 0.65 }, "<");
			tl.to(content, { opacity: 1, duration: 1 });
		});
	});

	// DESKTOP ANIMATION
	let mmDesktop = gsap.matchMedia();
	mmDesktop.add("(min-width: 1024px)", () => {
		projects.forEach((project) => {
			let tl = gsap.timeline({
				scrollTrigger: {
					trigger: project,
					start: "top 40%"
				}
			});
			let title = project.querySelector("h2");
			let image = project.querySelector(".img-desktop");
			let content = project.querySelector(".content");
			tl.to(image, { filter: "blur(0px)", duration: 1 });
			tl.to(title, { translateY: 0, duration: 0.65 }, "<");
			tl.to(content, { opacity: 1, duration: 1 });
		});
	});
</script>
